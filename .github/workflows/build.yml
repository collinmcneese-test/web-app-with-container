name: build

on:
  push:
    branches:
    - main
  workflow_dispatch:


env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  app-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
      - name: dependencies
        run: npm install
      - name: test
        run: npm test

  build-web-artifact:
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
      - name: dependencies
        run: npm install
      - name: build
        run: npm run build
      - name: Attest
        uses: actions/attest-build-provenance@v3
        with:
          subject-path: '${{ github.workspace }}/dist'
      - name: Archive production artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-artifact
          path: '${{ github.workspace }}/dist'

  build-docker-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Output Collector
        id: output-collector
        uses: collinmcneese/file-output-collector@main
        with:
          file: "./VERSION"

      - name: Prep
        run: |
          echo Building with version ${{ steps.output-collector.outputs.output }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta-docker
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build Docker image
        id: build-docker
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          push: true
          labels: ${{ steps.meta-docker.outputs.labels }}
          platforms: |
            linux/amd64
            linux/arm64
          build-args: |
            RUNNER_VERSION=${{ steps.output-collector.outputs.output }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.output-collector.outputs.output }}

      - name: debug build
        run: |
          echo "digest: ${{ steps.build-docker.outputs.digest }}"
          echo "metadata: ${{ steps.build-docker.outputs.metadata }}"
          echo "imageid: ${{ steps.build-docker.outputs.imageid }}"

      - name: docker - apk list
        run: |
          echo '```plain' >> $GITHUB_STEP_SUMMARY
          docker run --rm "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.output-collector.outputs.output }}" apk list >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: docker - Build Attestation
        continue-on-error: true
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.output-collector.outputs.output }}"
          subject-digest: "${{ steps.build-docker.outputs.digest }}"
          push-to-registry: false